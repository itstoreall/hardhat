{
  "address": "0x3108813e0b96307801C6c15954c361039d46fe66",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x80d139bc3db48ed0fe33802cb14b337a795690cdd026f202905af2361251a898",
  "receipt": {
    "to": null,
    "from": "0xa080c64E6a2937B327b50B75B408FBD5C739FF2B",
    "contractAddress": "0x3108813e0b96307801C6c15954c361039d46fe66",
    "transactionIndex": 18,
    "gasUsed": "826946",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "blockHash": "0x0383e883bb3ce7bbe2901af6b3a32261a1a9b4a3884a2f6bf4363edf5e1269e2",
    "transactionHash": "0x80d139bc3db48ed0fe33802cb14b337a795690cdd026f202905af2361251a898",
    "logs": [],
    "blockNumber": 8601561,
    "cumulativeGasUsed": "4757681",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e"
  ],
  "numDeployments": 1,
  "solcInputHash": "86e58e0111b069f84fc3d084f359ff82",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Funding.sol\":\"Funding\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/Funding.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.17;\\n\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror NotOwner();\\n\\ncontract Funding {\\n  using PriceConverter for uint256;\\n\\n  uint256 public constant MINIMUM_USD = 0.02 * 1e18; // 1 * 10 ** 18\\n  // 0.02 / 1625 = 0.000012484592145 (12400000000000 Wei)\\n\\n  address[] public funders;\\n  mapping(address => uint256) public addressToAmountFunded;\\n\\n  address public immutable i_owner;\\n\\n  AggregatorV3Interface public priceFeed;\\n\\n  constructor(address priceFeedAddress) {\\n    i_owner = msg.sender;\\n    priceFeed = AggregatorV3Interface(priceFeedAddress);\\n  }\\n\\n  function fund() public payable {\\n    require(\\n      msg.value.getConversionRate(priceFeed) >= MINIMUM_USD,\\n      \\\"Didn't sent enough!\\\"\\n    );\\n\\n    // 1e18 == 1 * 10 ** 18 == 1000000000000000000\\n    // 18 decimals\\n\\n    funders.push(msg.sender);\\n    addressToAmountFunded[msg.sender] += msg.value;\\n  }\\n\\n  function withdraw() public onlyOwner {\\n    for (uint256 funderIdx = 0; funderIdx < funders.length; funderIdx++) {\\n      address funder = funders[funderIdx];\\n      addressToAmountFunded[funder] = 0;\\n    }\\n\\n    funders = new address[](0);\\n\\n    // Call\\n    (bool callSuccess, ) = payable(msg.sender).call{\\n      value: address(this).balance\\n    }(\\\"\\\");\\n    require(callSuccess, \\\"Call failed\\\");\\n\\n    // Transfer (to each other)\\n    // payable(msg.sender).transfer(address(this).balance);\\n\\n    // Send\\n    // bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n    // require(sendSuccess, \\\"Send failed\\\");\\n  }\\n\\n  modifier onlyOwner() {\\n    // require(msg.sender == i_owner, \\\"Sender in not owner!\\\"); // not optimized\\n    if (msg.sender != i_owner) {\\n      revert NotOwner();\\n    } // optimized\\n    _;\\n  }\\n\\n  receive() external payable {\\n    fund();\\n  }\\n\\n  fallback() external payable {\\n    fund();\\n  }\\n}\\n\",\"keccak256\":\"0x04124187c82fc3965024c2695e5a23a33e43473437988b9eeedc49b0e653f253\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.17;\\n\\n// import \\\"../node_modules/@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverter {\\n  function getPrice(\\n    AggregatorV3Interface priceFeed\\n  ) internal view returns (uint256) {\\n    // ABI\\n    // address: 0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e\\n\\n    // AggregatorV3Interface priceFeed = AggregatorV3Interface(\\n    //   0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e\\n    // );\\n\\n    (, int price, , , ) = priceFeed.latestRoundData();\\n\\n    // ETH in terms of USD\\n    // 1655.00000000\\n\\n    return uint256(price * 1e10); // 1**10 == 10000000000\\n  }\\n\\n  /*\\n  function getVersion() internal view returns (uint256) {\\n    AggregatorV3Interface priceFeed = AggregatorV3Interface(\\n      0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e\\n    );\\n    return priceFeed.version();\\n  }\\n  */\\n\\n  function getConversionRate(\\n    uint256 ethAmount,\\n    AggregatorV3Interface priceFeed\\n  ) internal view returns (uint256) {\\n    uint256 ethPrice = getPrice(priceFeed);\\n\\n    // 1655_000000000000000000 = ETH / USD price\\n    // 1_000000000000000000 ETH\\n\\n    uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18;\\n    return ethAmountInUsd;\\n  }\\n}\\n\",\"keccak256\":\"0xfe76ef88cd596e5f8681eb3309f22f8d3c1474fbf7433aa1db4d5b7abda71eeb\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b50604051610ef2380380610ef283398181016040528101906100329190610110565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061013d565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100dd826100b2565b9050919050565b6100ed816100d2565b81146100f857600080fd5b50565b60008151905061010a816100e4565b92915050565b600060208284031215610126576101256100ad565b5b6000610134848285016100fb565b91505092915050565b608051610d9361015f600039600081816102e4015261056d0152610d936000f3fe6080604052600436106100745760003560e01c8063741bef1a1161004e578063741bef1a1461010c578063b60d428814610137578063dba6335f14610141578063dc0d3dff1461016c57610083565b80633ccfd60b1461008d5780633e47d6f3146100a45780636b69a592146100e157610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100a26102e2565b005b3480156100b057600080fd5b506100cb60048036038101906100c691906107a5565b610522565b6040516100d891906107eb565b60405180910390f35b3480156100ed57600080fd5b506100f661053a565b60405161010391906107eb565b60405180910390f35b34801561011857600080fd5b50610121610545565b60405161012e9190610865565b60405180910390f35b61013f6101a9565b005b34801561014d57600080fd5b5061015661056b565b604051610163919061088f565b60405180910390f35b34801561017857600080fd5b50610193600480360381019061018e91906108d6565b61058f565b6040516101a0919061088f565b60405180910390f35b66470de4df8200006101e6600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105ce90919063ffffffff16565b1015610227576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021e90610960565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102d991906109af565b92505081905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610367576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60008054905081101561041257600080828154811061038c5761038b6109e3565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061040a90610a12565b91505061036a565b50600067ffffffffffffffff81111561042e5761042d610a5a565b5b60405190808252806020026020018201604052801561045c5781602001602082028036833780820191505090505b506000908051906020019061047292919061069b565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161049990610aba565b60006040518083038185875af1925050503d80600081146104d6576040519150601f19603f3d011682016040523d82523d6000602084013e6104db565b606091505b505090508061051f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051690610b1b565b60405180910390fd5b50565b60016020528060005260406000206000915090505481565b66470de4df82000081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000818154811061059f57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806105da8361060a565b90506000670de0b6b3a764000085836105f39190610b3b565b6105fd9190610bac565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610658573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061067c9190610c6a565b5050509150506402540be400816106939190610ce5565b915050919050565b828054828255906000526020600020908101928215610714579160200282015b828111156107135782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106bb565b5b5090506107219190610725565b5090565b5b8082111561073e576000816000905550600101610726565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061077282610747565b9050919050565b61078281610767565b811461078d57600080fd5b50565b60008135905061079f81610779565b92915050565b6000602082840312156107bb576107ba610742565b5b60006107c984828501610790565b91505092915050565b6000819050919050565b6107e5816107d2565b82525050565b600060208201905061080060008301846107dc565b92915050565b6000819050919050565b600061082b61082661082184610747565b610806565b610747565b9050919050565b600061083d82610810565b9050919050565b600061084f82610832565b9050919050565b61085f81610844565b82525050565b600060208201905061087a6000830184610856565b92915050565b61088981610767565b82525050565b60006020820190506108a46000830184610880565b92915050565b6108b3816107d2565b81146108be57600080fd5b50565b6000813590506108d0816108aa565b92915050565b6000602082840312156108ec576108eb610742565b5b60006108fa848285016108c1565b91505092915050565b600082825260208201905092915050565b7f4469646e27742073656e7420656e6f7567682100000000000000000000000000600082015250565b600061094a601383610903565b915061095582610914565b602082019050919050565b600060208201905081810360008301526109798161093d565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109ba826107d2565b91506109c5836107d2565b92508282019050808211156109dd576109dc610980565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610a1d826107d2565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610a4f57610a4e610980565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610aa4600083610a89565b9150610aaf82610a94565b600082019050919050565b6000610ac582610a97565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610b05600b83610903565b9150610b1082610acf565b602082019050919050565b60006020820190508181036000830152610b3481610af8565b9050919050565b6000610b46826107d2565b9150610b51836107d2565b9250828202610b5f816107d2565b91508282048414831517610b7657610b75610980565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610bb7826107d2565b9150610bc2836107d2565b925082610bd257610bd1610b7d565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610bfc81610bdd565b8114610c0757600080fd5b50565b600081519050610c1981610bf3565b92915050565b6000819050919050565b610c3281610c1f565b8114610c3d57600080fd5b50565b600081519050610c4f81610c29565b92915050565b600081519050610c64816108aa565b92915050565b600080600080600060a08688031215610c8657610c85610742565b5b6000610c9488828901610c0a565b9550506020610ca588828901610c40565b9450506040610cb688828901610c55565b9350506060610cc788828901610c55565b9250506080610cd888828901610c0a565b9150509295509295909350565b6000610cf082610c1f565b9150610cfb83610c1f565b9250828202610d0981610c1f565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610d4157610d40610980565b5b8282058414831517610d5657610d55610980565b5b509291505056fea264697066735822122014bd91a49153e8604393e6013fec54c79daa3ccb64dd145fea2ee939effcef4b64736f6c63430008110033",
  "deployedBytecode": "0x6080604052600436106100745760003560e01c8063741bef1a1161004e578063741bef1a1461010c578063b60d428814610137578063dba6335f14610141578063dc0d3dff1461016c57610083565b80633ccfd60b1461008d5780633e47d6f3146100a45780636b69a592146100e157610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100a26102e2565b005b3480156100b057600080fd5b506100cb60048036038101906100c691906107a5565b610522565b6040516100d891906107eb565b60405180910390f35b3480156100ed57600080fd5b506100f661053a565b60405161010391906107eb565b60405180910390f35b34801561011857600080fd5b50610121610545565b60405161012e9190610865565b60405180910390f35b61013f6101a9565b005b34801561014d57600080fd5b5061015661056b565b604051610163919061088f565b60405180910390f35b34801561017857600080fd5b50610193600480360381019061018e91906108d6565b61058f565b6040516101a0919061088f565b60405180910390f35b66470de4df8200006101e6600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105ce90919063ffffffff16565b1015610227576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021e90610960565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102d991906109af565b92505081905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610367576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60008054905081101561041257600080828154811061038c5761038b6109e3565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061040a90610a12565b91505061036a565b50600067ffffffffffffffff81111561042e5761042d610a5a565b5b60405190808252806020026020018201604052801561045c5781602001602082028036833780820191505090505b506000908051906020019061047292919061069b565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161049990610aba565b60006040518083038185875af1925050503d80600081146104d6576040519150601f19603f3d011682016040523d82523d6000602084013e6104db565b606091505b505090508061051f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051690610b1b565b60405180910390fd5b50565b60016020528060005260406000206000915090505481565b66470de4df82000081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000818154811061059f57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806105da8361060a565b90506000670de0b6b3a764000085836105f39190610b3b565b6105fd9190610bac565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610658573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061067c9190610c6a565b5050509150506402540be400816106939190610ce5565b915050919050565b828054828255906000526020600020908101928215610714579160200282015b828111156107135782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106bb565b5b5090506107219190610725565b5090565b5b8082111561073e576000816000905550600101610726565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061077282610747565b9050919050565b61078281610767565b811461078d57600080fd5b50565b60008135905061079f81610779565b92915050565b6000602082840312156107bb576107ba610742565b5b60006107c984828501610790565b91505092915050565b6000819050919050565b6107e5816107d2565b82525050565b600060208201905061080060008301846107dc565b92915050565b6000819050919050565b600061082b61082661082184610747565b610806565b610747565b9050919050565b600061083d82610810565b9050919050565b600061084f82610832565b9050919050565b61085f81610844565b82525050565b600060208201905061087a6000830184610856565b92915050565b61088981610767565b82525050565b60006020820190506108a46000830184610880565b92915050565b6108b3816107d2565b81146108be57600080fd5b50565b6000813590506108d0816108aa565b92915050565b6000602082840312156108ec576108eb610742565b5b60006108fa848285016108c1565b91505092915050565b600082825260208201905092915050565b7f4469646e27742073656e7420656e6f7567682100000000000000000000000000600082015250565b600061094a601383610903565b915061095582610914565b602082019050919050565b600060208201905081810360008301526109798161093d565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109ba826107d2565b91506109c5836107d2565b92508282019050808211156109dd576109dc610980565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610a1d826107d2565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610a4f57610a4e610980565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610aa4600083610a89565b9150610aaf82610a94565b600082019050919050565b6000610ac582610a97565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610b05600b83610903565b9150610b1082610acf565b602082019050919050565b60006020820190508181036000830152610b3481610af8565b9050919050565b6000610b46826107d2565b9150610b51836107d2565b9250828202610b5f816107d2565b91508282048414831517610b7657610b75610980565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610bb7826107d2565b9150610bc2836107d2565b925082610bd257610bd1610b7d565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610bfc81610bdd565b8114610c0757600080fd5b50565b600081519050610c1981610bf3565b92915050565b6000819050919050565b610c3281610c1f565b8114610c3d57600080fd5b50565b600081519050610c4f81610c29565b92915050565b600081519050610c64816108aa565b92915050565b600080600080600060a08688031215610c8657610c85610742565b5b6000610c9488828901610c0a565b9550506020610ca588828901610c40565b9450506040610cb688828901610c55565b9350506060610cc788828901610c55565b9250506080610cd888828901610c0a565b9150509295509295909350565b6000610cf082610c1f565b9150610cfb83610c1f565b9250828202610d0981610c1f565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610d4157610d40610980565b5b8282058414831517610d5657610d55610980565b5b509291505056fea264697066735822122014bd91a49153e8604393e6013fec54c79daa3ccb64dd145fea2ee939effcef4b64736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 82,
        "contract": "contracts/Funding.sol:Funding",
        "label": "funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 86,
        "contract": "contracts/Funding.sol:Funding",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 91,
        "contract": "contracts/Funding.sol:Funding",
        "label": "priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}